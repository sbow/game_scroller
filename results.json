{
  "directories": [
    "src",
    "src/types",
    "src/scenes",
    "public",
    "public/assets",
    "public/assets/skies",
    "public/assets/asteroids",
    "public/assets/asteroids/medium",
    "public/assets/asteroids/small",
    "public/assets/asteroids/large",
    "public/assets/audio",
    "public/assets/sprites"
  ],
  "files": [
    "tsconfig.json",
    "data_qa_perspective=dad;target=5.txt",
    "package-lock.json",
    "webpack.config.js",
    "package.json",
    "results.json",
    "src/index.ts",
    "src/types/Question.ts",
    "src/types/GameObjects.ts",
    "src/scenes/GameScene.ts",
    "public/index.html",
    "public/assets/skies/space3.png",
    "public/assets/asteroids/readme.txt",
    "public/assets/asteroids/medium/a30014.png",
    "public/assets/asteroids/medium/d40010.png",
    "public/assets/asteroids/medium/a40015.png",
    "public/assets/asteroids/medium/a10000.png",
    "public/assets/asteroids/medium/d30012.png",
    "public/assets/asteroids/medium/d40004.png",
    "public/assets/asteroids/medium/a10006.png",
    "public/assets/asteroids/medium/b40008.png",
    "public/assets/asteroids/medium/c10015.png",
    "public/assets/asteroids/medium/b40000.png",
    "public/assets/asteroids/medium/a30006.png",
    "public/assets/asteroids/medium/d40009.png",
    "public/assets/asteroids/medium/c40014.png",
    "public/assets/asteroids/medium/a40003.png",
    "public/assets/asteroids/medium/d10011.png",
    "public/assets/asteroids/medium/a10004.png",
    "public/assets/asteroids/medium/d10001.png",
    "public/assets/asteroids/medium/d10002.png",
    "public/assets/asteroids/medium/a40011.png",
    "public/assets/asteroids/medium/b40011.png",
    "public/assets/asteroids/medium/b40012.png",
    "public/assets/asteroids/medium/c40000.png",
    "public/assets/asteroids/medium/c40001.png",
    "public/assets/asteroids/medium/d10012.png",
    "public/assets/asteroids/medium/d10010.png",
    "public/assets/asteroids/medium/a10001.png",
    "public/assets/asteroids/medium/a40004.png",
    "public/assets/asteroids/medium/a40007.png",
    "public/assets/asteroids/medium/a40006.png",
    "public/assets/asteroids/medium/c10006.png",
    "public/assets/asteroids/medium/d10015.png",
    "public/assets/asteroids/medium/a10014.png",
    "public/assets/asteroids/medium/b40004.png",
    "public/assets/asteroids/medium/a10012.png",
    "public/assets/asteroids/medium/d10003.png",
    "public/assets/asteroids/medium/d40005.png",
    "public/assets/asteroids/medium/c10007.png",
    "public/assets/asteroids/medium/a10002.png",
    "public/assets/asteroids/medium/c30010.png",
    "public/assets/asteroids/medium/c30000.png",
    "public/assets/asteroids/medium/c30005.png",
    "public/assets/asteroids/medium/c40006.png",
    "public/assets/asteroids/medium/b40003.png",
    "public/assets/asteroids/medium/a30007.png",
    "public/assets/asteroids/medium/c30011.png",
    "public/assets/asteroids/medium/d30005.png",
    "public/assets/asteroids/medium/c40004.png",
    "public/assets/asteroids/medium/d40011.png",
    "public/assets/asteroids/medium/c10005.png",
    "public/assets/asteroids/medium/a10008.png",
    "public/assets/asteroids/medium/c30006.png",
    "public/assets/asteroids/medium/d10013.png",
    "public/assets/asteroids/medium/d40014.png",
    "public/assets/asteroids/medium/d30002.png",
    "public/assets/asteroids/medium/c30004.png",
    "public/assets/asteroids/medium/b40002.png",
    "public/assets/asteroids/medium/a10011.png",
    "public/assets/asteroids/medium/a30012.png",
    "public/assets/asteroids/medium/d10000.png",
    "public/assets/asteroids/medium/c30008.png",
    "public/assets/asteroids/medium/a30003.png",
    "public/assets/asteroids/medium/d40003.png",
    "public/assets/asteroids/medium/c30001.png",
    "public/assets/asteroids/medium/d30011.png",
    "public/assets/asteroids/medium/d40013.png",
    "public/assets/asteroids/medium/a40002.png",
    "public/assets/asteroids/medium/a40001.png",
    "public/assets/asteroids/medium/a30002.png",
    "public/assets/asteroids/medium/b40014.png",
    "public/assets/asteroids/medium/c30014.png",
    "public/assets/asteroids/medium/a10010.png",
    "public/assets/asteroids/medium/d10004.png",
    "public/assets/asteroids/medium/c30003.png",
    "public/assets/asteroids/medium/c10004.png",
    "public/assets/asteroids/medium/d10007.png",
    "public/assets/asteroids/medium/a40010.png",
    "public/assets/asteroids/medium/c40015.png",
    "public/assets/asteroids/medium/a30010.png",
    "public/assets/asteroids/medium/b40001.png",
    "public/assets/asteroids/medium/c40009.png",
    "public/assets/asteroids/medium/a30004.png",
    "public/assets/asteroids/medium/d40007.png",
    "public/assets/asteroids/medium/a30009.png",
    "public/assets/asteroids/medium/b40007.png",
    "public/assets/asteroids/medium/c10008.png",
    "public/assets/asteroids/medium/a10007.png",
    "public/assets/asteroids/medium/a40009.png",
    "public/assets/asteroids/medium/c10002.png",
    "public/assets/asteroids/medium/a30000.png",
    "public/assets/asteroids/medium/a40012.png",
    "public/assets/asteroids/medium/d10005.png",
    "public/assets/asteroids/medium/d40015.png",
    "public/assets/asteroids/medium/c30015.png",
    "public/assets/asteroids/medium/c10012.png",
    "public/assets/asteroids/medium/d30003.png",
    "public/assets/asteroids/medium/d30000.png",
    "public/assets/asteroids/medium/a30005.png",
    "public/assets/asteroids/medium/d30008.png",
    "public/assets/asteroids/medium/d10008.png",
    "public/assets/asteroids/medium/b40009.png",
    "public/assets/asteroids/medium/c40010.png",
    "public/assets/asteroids/medium/d40008.png",
    "public/assets/asteroids/medium/d30001.png",
    "public/assets/asteroids/medium/c40008.png",
    "public/assets/asteroids/medium/d30006.png",
    "public/assets/asteroids/medium/c10000.png",
    "public/assets/asteroids/medium/d30013.png",
    "public/assets/asteroids/medium/a30011.png",
    "public/assets/asteroids/medium/a40014.png",
    "public/assets/asteroids/medium/c40013.png",
    "public/assets/asteroids/medium/d40012.png",
    "public/assets/asteroids/medium/b40005.png",
    "public/assets/asteroids/medium/c10011.png",
    "public/assets/asteroids/medium/a40005.png",
    "public/assets/asteroids/medium/d30004.png",
    "public/assets/asteroids/medium/d30014.png",
    "public/assets/asteroids/medium/a30008.png",
    "public/assets/asteroids/medium/c30007.png",
    "public/assets/asteroids/medium/a10009.png",
    "public/assets/asteroids/medium/a40013.png",
    "public/assets/asteroids/medium/a40000.png",
    "public/assets/asteroids/medium/c40005.png",
    "public/assets/asteroids/medium/b40010.png",
    "public/assets/asteroids/medium/c40003.png",
    "public/assets/asteroids/medium/d40006.png",
    "public/assets/asteroids/medium/d30010.png",
    "public/assets/asteroids/medium/c30012.png",
    "public/assets/asteroids/medium/c40012.png",
    "public/assets/asteroids/medium/b40013.png",
    "public/assets/asteroids/medium/a30015.png",
    "public/assets/asteroids/medium/c40011.png",
    "public/assets/asteroids/medium/c30009.png",
    "public/assets/asteroids/medium/c10001.png",
    "public/assets/asteroids/medium/d40001.png",
    "public/assets/asteroids/medium/d10009.png",
    "public/assets/asteroids/medium/d10006.png",
    "public/assets/asteroids/medium/c10014.png",
    "public/assets/asteroids/medium/a10003.png",
    "public/assets/asteroids/medium/b40015.png",
    "public/assets/asteroids/medium/d30015.png",
    "public/assets/asteroids/medium/c10013.png",
    "public/assets/asteroids/medium/a10015.png",
    "public/assets/asteroids/medium/d30009.png",
    "public/assets/asteroids/medium/d10014.png",
    "public/assets/asteroids/medium/c40007.png",
    "public/assets/asteroids/medium/a30013.png",
    "public/assets/asteroids/medium/a30001.png",
    "public/assets/asteroids/medium/a10005.png",
    "public/assets/asteroids/medium/c10009.png",
    "public/assets/asteroids/medium/c10010.png",
    "public/assets/asteroids/medium/d40000.png",
    "public/assets/asteroids/medium/c10003.png",
    "public/assets/asteroids/medium/a10013.png",
    "public/assets/asteroids/medium/b40006.png",
    "public/assets/asteroids/medium/a40008.png",
    "public/assets/asteroids/medium/c30002.png",
    "public/assets/asteroids/medium/d30007.png",
    "public/assets/asteroids/medium/c30013.png",
    "public/assets/asteroids/medium/c40002.png",
    "public/assets/asteroids/medium/d40002.png",
    "public/assets/asteroids/small/a30014.png",
    "public/assets/asteroids/small/a40015.png",
    "public/assets/asteroids/small/a10000.png",
    "public/assets/asteroids/small/a10006.png",
    "public/assets/asteroids/small/b40008.png",
    "public/assets/asteroids/small/b40000.png",
    "public/assets/asteroids/small/a30006.png",
    "public/assets/asteroids/small/a40003.png",
    "public/assets/asteroids/small/a10004.png",
    "public/assets/asteroids/small/b30011.png",
    "public/assets/asteroids/small/a40011.png",
    "public/assets/asteroids/small/b40011.png",
    "public/assets/asteroids/small/b40012.png",
    "public/assets/asteroids/small/a10001.png",
    "public/assets/asteroids/small/a40004.png",
    "public/assets/asteroids/small/a40007.png",
    "public/assets/asteroids/small/b30007.png",
    "public/assets/asteroids/small/b10002.png",
    "public/assets/asteroids/small/a40006.png",
    "public/assets/asteroids/small/b30002.png",
    "public/assets/asteroids/small/a10014.png",
    "public/assets/asteroids/small/b40004.png",
    "public/assets/asteroids/small/a10012.png",
    "public/assets/asteroids/small/b10004.png",
    "public/assets/asteroids/small/b10008.png",
    "public/assets/asteroids/small/b10005.png",
    "public/assets/asteroids/small/a10002.png",
    "public/assets/asteroids/small/b10001.png",
    "public/assets/asteroids/small/b30012.png",
    "public/assets/asteroids/small/b40003.png",
    "public/assets/asteroids/small/a30007.png",
    "public/assets/asteroids/small/b10012.png",
    "public/assets/asteroids/small/a10008.png",
    "public/assets/asteroids/small/b30005.png",
    "public/assets/asteroids/small/b40002.png",
    "public/assets/asteroids/small/a10011.png",
    "public/assets/asteroids/small/b30014.png",
    "public/assets/asteroids/small/a30012.png",
    "public/assets/asteroids/small/a30003.png",
    "public/assets/asteroids/small/a40002.png",
    "public/assets/asteroids/small/a40001.png",
    "public/assets/asteroids/small/a30002.png",
    "public/assets/asteroids/small/b10010.png",
    "public/assets/asteroids/small/b40014.png",
    "public/assets/asteroids/small/a10010.png",
    "public/assets/asteroids/small/a40010.png",
    "public/assets/asteroids/small/a30010.png",
    "public/assets/asteroids/small/b40001.png",
    "public/assets/asteroids/small/b10013.png",
    "public/assets/asteroids/small/a30004.png",
    "public/assets/asteroids/small/a30009.png",
    "public/assets/asteroids/small/b40007.png",
    "public/assets/asteroids/small/b30008.png",
    "public/assets/asteroids/small/b30010.png",
    "public/assets/asteroids/small/a10007.png",
    "public/assets/asteroids/small/a40009.png",
    "public/assets/asteroids/small/a30000.png",
    "public/assets/asteroids/small/a40012.png",
    "public/assets/asteroids/small/b10000.png",
    "public/assets/asteroids/small/b30013.png",
    "public/assets/asteroids/small/a30005.png",
    "public/assets/asteroids/small/b40009.png",
    "public/assets/asteroids/small/b30006.png",
    "public/assets/asteroids/small/b30004.png",
    "public/assets/asteroids/small/b10015.png",
    "public/assets/asteroids/small/a30011.png",
    "public/assets/asteroids/small/a40014.png",
    "public/assets/asteroids/small/b10003.png",
    "public/assets/asteroids/small/b10011.png",
    "public/assets/asteroids/small/b40005.png",
    "public/assets/asteroids/small/a40005.png",
    "public/assets/asteroids/small/b30001.png",
    "public/assets/asteroids/small/b10009.png",
    "public/assets/asteroids/small/a30008.png",
    "public/assets/asteroids/small/a10009.png",
    "public/assets/asteroids/small/a40013.png",
    "public/assets/asteroids/small/a40000.png",
    "public/assets/asteroids/small/b40010.png",
    "public/assets/asteroids/small/b30003.png",
    "public/assets/asteroids/small/b10006.png",
    "public/assets/asteroids/small/b40013.png",
    "public/assets/asteroids/small/b30009.png",
    "public/assets/asteroids/small/a30015.png",
    "public/assets/asteroids/small/a10003.png",
    "public/assets/asteroids/small/b40015.png",
    "public/assets/asteroids/small/a10015.png",
    "public/assets/asteroids/small/a30013.png",
    "public/assets/asteroids/small/a30001.png",
    "public/assets/asteroids/small/a10005.png",
    "public/assets/asteroids/small/a10013.png",
    "public/assets/asteroids/small/b40006.png",
    "public/assets/asteroids/small/a40008.png",
    "public/assets/asteroids/small/b30015.png",
    "public/assets/asteroids/small/b10014.png",
    "public/assets/asteroids/small/b30000.png",
    "public/assets/asteroids/small/b10007.png",
    "public/assets/asteroids/large/a30014.png",
    "public/assets/asteroids/large/a10000.png",
    "public/assets/asteroids/large/a10006.png",
    "public/assets/asteroids/large/c10015.png",
    "public/assets/asteroids/large/a30006.png",
    "public/assets/asteroids/large/c40014.png",
    "public/assets/asteroids/large/a10004.png",
    "public/assets/asteroids/large/b30011.png",
    "public/assets/asteroids/large/c40000.png",
    "public/assets/asteroids/large/c40001.png",
    "public/assets/asteroids/large/a10001.png",
    "public/assets/asteroids/large/b30007.png",
    "public/assets/asteroids/large/b10002.png",
    "public/assets/asteroids/large/c10006.png",
    "public/assets/asteroids/large/b30002.png",
    "public/assets/asteroids/large/a10014.png",
    "public/assets/asteroids/large/a10012.png",
    "public/assets/asteroids/large/b10004.png",
    "public/assets/asteroids/large/b10008.png",
    "public/assets/asteroids/large/b10005.png",
    "public/assets/asteroids/large/c10007.png",
    "public/assets/asteroids/large/a10002.png",
    "public/assets/asteroids/large/c30010.png",
    "public/assets/asteroids/large/c30000.png",
    "public/assets/asteroids/large/b10001.png",
    "public/assets/asteroids/large/b30012.png",
    "public/assets/asteroids/large/c30005.png",
    "public/assets/asteroids/large/c40006.png",
    "public/assets/asteroids/large/a30007.png",
    "public/assets/asteroids/large/c30011.png",
    "public/assets/asteroids/large/b10012.png",
    "public/assets/asteroids/large/c40004.png",
    "public/assets/asteroids/large/c10005.png",
    "public/assets/asteroids/large/a10008.png",
    "public/assets/asteroids/large/b30005.png",
    "public/assets/asteroids/large/c30006.png",
    "public/assets/asteroids/large/c30004.png",
    "public/assets/asteroids/large/a10011.png",
    "public/assets/asteroids/large/b30014.png",
    "public/assets/asteroids/large/a30012.png",
    "public/assets/asteroids/large/c30008.png",
    "public/assets/asteroids/large/a30003.png",
    "public/assets/asteroids/large/c30001.png",
    "public/assets/asteroids/large/a30002.png",
    "public/assets/asteroids/large/b10010.png",
    "public/assets/asteroids/large/c30014.png",
    "public/assets/asteroids/large/a10010.png",
    "public/assets/asteroids/large/c30003.png",
    "public/assets/asteroids/large/c10004.png",
    "public/assets/asteroids/large/c40015.png",
    "public/assets/asteroids/large/a30010.png",
    "public/assets/asteroids/large/b10013.png",
    "public/assets/asteroids/large/c40009.png",
    "public/assets/asteroids/large/a30004.png",
    "public/assets/asteroids/large/a30009.png",
    "public/assets/asteroids/large/b30008.png",
    "public/assets/asteroids/large/b30010.png",
    "public/assets/asteroids/large/c10008.png",
    "public/assets/asteroids/large/a10007.png",
    "public/assets/asteroids/large/c10002.png",
    "public/assets/asteroids/large/a30000.png",
    "public/assets/asteroids/large/b10000.png",
    "public/assets/asteroids/large/b30013.png",
    "public/assets/asteroids/large/c30015.png",
    "public/assets/asteroids/large/c10012.png",
    "public/assets/asteroids/large/a30005.png",
    "public/assets/asteroids/large/c40010.png",
    "public/assets/asteroids/large/b30006.png",
    "public/assets/asteroids/large/b30004.png",
    "public/assets/asteroids/large/c40008.png",
    "public/assets/asteroids/large/c10000.png",
    "public/assets/asteroids/large/b10015.png",
    "public/assets/asteroids/large/a30011.png",
    "public/assets/asteroids/large/c40013.png",
    "public/assets/asteroids/large/b10003.png",
    "public/assets/asteroids/large/b10011.png",
    "public/assets/asteroids/large/c10011.png",
    "public/assets/asteroids/large/b30001.png",
    "public/assets/asteroids/large/b10009.png",
    "public/assets/asteroids/large/a30008.png",
    "public/assets/asteroids/large/c30007.png",
    "public/assets/asteroids/large/a10009.png",
    "public/assets/asteroids/large/c40005.png",
    "public/assets/asteroids/large/c40003.png",
    "public/assets/asteroids/large/b30003.png",
    "public/assets/asteroids/large/c30012.png",
    "public/assets/asteroids/large/c40012.png",
    "public/assets/asteroids/large/b10006.png",
    "public/assets/asteroids/large/b30009.png",
    "public/assets/asteroids/large/a30015.png",
    "public/assets/asteroids/large/c40011.png",
    "public/assets/asteroids/large/c30009.png",
    "public/assets/asteroids/large/c10001.png",
    "public/assets/asteroids/large/c10014.png",
    "public/assets/asteroids/large/a10003.png",
    "public/assets/asteroids/large/c10013.png",
    "public/assets/asteroids/large/a10015.png",
    "public/assets/asteroids/large/c40007.png",
    "public/assets/asteroids/large/a30013.png",
    "public/assets/asteroids/large/a30001.png",
    "public/assets/asteroids/large/a10005.png",
    "public/assets/asteroids/large/c10009.png",
    "public/assets/asteroids/large/c10010.png",
    "public/assets/asteroids/large/c10003.png",
    "public/assets/asteroids/large/a10013.png",
    "public/assets/asteroids/large/b30015.png",
    "public/assets/asteroids/large/b10014.png",
    "public/assets/asteroids/large/c30002.png",
    "public/assets/asteroids/large/b30000.png",
    "public/assets/asteroids/large/b10007.png",
    "public/assets/asteroids/large/c30013.png",
    "public/assets/asteroids/large/c40002.png",
    "public/assets/audio/training-program-correct2-88734.mp3",
    "public/assets/audio/wrong.wav",
    "public/assets/audio/buzzer-or-wrong-answer-20582.mp3",
    "public/assets/audio/wrong.mp3",
    "public/assets/audio/correct.mp3",
    "public/assets/audio/correct.wav",
    "public/assets/sprites/thrust_ship2.png"
  ],
  "file_contents": {
    "tsconfig.json": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"module\": \"commonjs\",\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true,\n    \"forceConsistentCasingInFileNames\": true\n  }\n}\n",
    "package.json": "{\n  \"name\": \"game_scroller\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"webpack serve --mode development\",\n    \"build\": \"webpack --mode production\",\n    \"clean\": \"rm -rf dist\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"phaser\": \"^3.70.0\"\n  },\n  \"devDependencies\": {\n    \"typescript\": \"^5.3.3\",\n    \"ts-loader\": \"^9.5.1\",\n    \"webpack\": \"^5.89.0\",\n    \"webpack-cli\": \"^5.1.4\",\n    \"webpack-dev-server\": \"^4.15.1\",\n    \"copy-webpack-plugin\": \"^11.0.0\",\n    \"html-webpack-plugin\": \"^5.5.0\",\n    \"@types/node\": \"^20.10.0\"\n  }\n}",
    "src/index.ts": "// index.ts\nimport 'phaser';\nimport { GameScene } from './scenes/GameScene';\n\n// Get debug mode from URL parameter\nconst debugMode = window.location.search.includes('debug=true');\nconsole.log('Debug mode:', debugMode);\n\nconst config: Phaser.Types.Core.GameConfig = {\n    type: Phaser.AUTO,\n    width: 800,\n    height: 600,\n    physics: {\n        default: 'arcade',\n        arcade: {\n            gravity: { x: 0, y: 0 },\n            debug: debugMode\n        }\n    },\n    // Instead of passing the debug flag through scene config,\n    // we'll pass it as data to the scene\n    scene: GameScene,\n    backgroundColor: '#000000',\n    scale: {\n        mode: Phaser.Scale.FIT,\n        autoCenter: Phaser.Scale.CENTER_BOTH\n    }\n};\n\n// Create game instance\nconst game = new Phaser.Game(config);\n\n// Get the scene and set debug mode\nconst gameScene = game.scene.getScene('GameScene') as GameScene;\nif (gameScene) {\n    gameScene.setDebug(debugMode);\n}",
    "src/types/Question.ts": "export interface Question {\n    text: string;\n    options: string[];\n    correctAnswer: number;\n}\n\nexport const QUESTIONS: Question[] = [\n    {\n        text: \"Who's this?\",\n        options: [\"Georgia\", \"Miles\", \"Mumma\", \"Dado\"],\n        correctAnswer: 0\n    },\n    {\n        text: \"Who took the cookie, from the cookie jar?\",\n        options: [\"Georgia\", \"Miles\", \"Mumma\", \"Dado\"],\n        correctAnswer: 0\n    },\n    {\n        text: \"What is a rainbow?\",\n        options: [\"Magic\", \"Radio Wave Arch\", \"Sprinkle Water Arch\", \"Frozen Water Arch\"],\n        correctAnswer: 2\n    },\n    {\n        text: \"What do you call mumma's mumma?\",\n        options: [\"Gramy\", \"Grandma\", \"Mimi\", \"Papa\"],\n        correctAnswer: 2\n    },\n    {\n        text: \"What does mumma call mumma's mumma?\",\n        options: [\"Mom\", \"Gramy\", \"Mimi\", \"Dad\"],\n        correctAnswer: 0\n    },\n    {\n        text: \"What is Mile's Birthday: July ?\",\n        options: [\"7\", \"8\", \"9\", \"10\"],\n        correctAnswer: 2\n    },\n    {\n        text: \"What is Dad's Birthday: May ?\",\n        options: [\"16\", \"17\", \"18\", \"19\"],\n        correctAnswer: 0\n    },\n    {\n        text: \"Which planet is closest to the Sun?\",\n        options: [\"Venus\", \"Mercury\", \"Mars\", \"Earth\"],\n        correctAnswer: 1\n    },\n    {\n        text: \"What is 2 + 2?\",\n        options: [\"3\", \"4\", \"5\", \"6\"],\n        correctAnswer: 1\n    },\n    {\n        text: \"What color is the sky?\",\n        options: [\"Red\", \"Green\", \"Blue\", \"Yellow\"],\n        correctAnswer: 2\n    }\n];\n",
    "src/types/GameObjects.ts": "export interface GameObjects {\n    x: number;\n    y: number;\n    speed: number;\n}\n\nexport interface Player extends GameObjects {\n    lives: number;\n}\n\nexport interface Asteroid extends GameObjects {\n    size: number;\n}",
    "src/scenes/GameScene.ts": "import { Player, Asteroid } from '../types/GameObjects';\n\nexport class GameScene extends Phaser.Scene {\n    private debugEnabled: boolean = false;\n    private debugGraphics!: Phaser.GameObjects.Graphics;\n    private player!: Phaser.GameObjects.Sprite;\n    private asteroids: Array<{sprite: Phaser.GameObjects.Sprite; velocityX: number; velocityY: number}> = [];\n    private cursors!: Phaser.Types.Input.Keyboard.CursorKeys;\n    private score: number = 0;\n    private scoreText!: Phaser.GameObjects.Text;\n    private levelText!: Phaser.GameObjects.Text;\n    private gameOver: boolean = false;\n    private spawnTimer!: Phaser.Time.TimerEvent;\n    private level: number = 1;\n    private levelProgress: number = 0;\n    private levelThreshold: number = 1000; // Score needed to advance level\n\n    constructor() {\n        super({ key: 'GameScene' });\n    }\n\n    setDebug(enabled: boolean) {\n        this.debugEnabled = enabled;\n        // Always create debug graphics if enabled, even if it exists\n        if (this.debugEnabled) {\n            // Destroy existing debug graphics if it exists\n            if (this.debugGraphics) {\n                this.debugGraphics.destroy();\n            }\n            this.debugGraphics = this.add.graphics();\n            this.debugGraphics.setDepth(2);\n        }\n        console.log('Debug mode set to:', this.debugEnabled);\n    }    \n\n    init() {\n        // Make sure debug graphics is created if debug is enabled\n        if (this.debugEnabled && !this.debugGraphics) {\n            this.debugGraphics = this.add.graphics();\n            this.debugGraphics.setDepth(2);\n        }    \n    }\n\n\n    preload() {\n   //     this.load.setBaseURL('https://labs.phaser.io');\n   //     this.load.image('ship', 'assets/sprites/thrust_ship2.png');\n   //     this.load.image('asteroid', 'assets/sprites/asteroid.png');\n   //     this.load.image('background', 'assets/skies/space3.png');\n        this.load.image('ship', 'assets/sprites/thrust_ship2.png');\n        this.load.image('asteroid', 'assets/asteroids/medium/a10000.png');\n        this.load.image('background', 'assets/skies/space3.png');\n    }\n\n    create() {\n        this.resetGameState();\n\n        const background = this.add.tileSprite(\n            this.cameras.main.centerX, \n            this.cameras.main.centerY, \n            this.cameras.main.width,\n            this.cameras.main.height,\n            'background'\n        );\n        \n        this.player = this.add.sprite(\n            this.cameras.main.centerX,\n            this.cameras.main.centerY,\n            'ship'\n        ).setDepth(1);\n\n        this.cursors = (this.input.keyboard as Phaser.Input.Keyboard.KeyboardPlugin).createCursorKeys();\n\n        // Add score and level display\n        this.scoreText = this.add.text(16, 16, 'Score: 0', {\n            fontSize: '32px',\n            color: '#ffffff'\n        });\n\n        this.levelText = this.add.text(16, 56, 'Level: 1', {\n            fontSize: '32px',\n            color: '#ffffff'\n        });\n        \n        this.startLevel();\n    }\n\n    private startLevel() {\n        // Adjust difficulty based on level\n        const spawnDelay = Math.max(1500 - (this.level * 100), 500); // Faster spawns each level, minimum 500ms\n        \n        this.spawnTimer = this.time.addEvent({\n            delay: spawnDelay,\n            callback: this.spawnAsteroid,\n            callbackScope: this,\n            loop: true\n        });\n\n        // Show level start text\n        const levelStartText = this.add.text(400, 300, `Level ${this.level}`, {\n            fontSize: '64px',\n            color: '#ffffff'\n        }).setOrigin(0.5);\n\n        // Remove the text after 2 seconds\n        this.time.delayedCall(2000, () => {\n            levelStartText.destroy();\n        });\n    }\n\n    update(time: number, delta: number) {\n        if (this.gameOver) {\n            return;\n        }\n\n        // Always clear and reset debug graphics if debug is enabled\n        if (this.debugEnabled) {\n            if (!this.debugGraphics) {\n                this.debugGraphics = this.add.graphics();\n                this.debugGraphics.setDepth(2);\n            }\n            this.debugGraphics.clear();\n            this.debugGraphics.lineStyle(2, 0x00ff00);\n        }\n\n        // Update score and check for level progression\n        this.score += delta * 0.01;\n        this.levelProgress += delta * 0.01;\n        this.scoreText.setText(`Score: ${Math.floor(this.score)}`);\n\n        // Check for level up\n        if (this.levelProgress >= this.levelThreshold) {\n            this.levelUp();\n        }\n\n        // Handle player movement\n        if (this.cursors.left.isDown) {\n            this.player.x = Math.max(this.player.x - 5, 50);\n        }\n        if (this.cursors.right.isDown) {\n            this.player.x = Math.min(this.player.x + 5, 750);\n        }\n        if (this.cursors.up.isDown) {\n            this.player.y = Math.max(this.player.y - 5, 50);\n        }\n        if (this.cursors.down.isDown) {\n            this.player.y = Math.min(this.player.y + 5, 550);\n        }\n\n        if (this.debugEnabled && this.debugGraphics) {\n            // Draw player bounds\n            const playerBounds = this.player.getBounds();\n            this.debugGraphics.strokeRect(\n                playerBounds.x,\n                playerBounds.y,\n                playerBounds.width,\n                playerBounds.height\n            );\n        }\n\n        // Update asteroids\n        for (let i = this.asteroids.length - 1; i >= 0; i--) {\n            const asteroidObj = this.asteroids[i];\n            const asteroid = asteroidObj.sprite;\n            \n            asteroid.x += asteroidObj.velocityX;\n            asteroid.y += asteroidObj.velocityY;\n\n            // In your update loop's asteroid section:\n            const asteroidBounds = asteroid.getBounds();\n            const scaledBounds = this.getScaledBounds(asteroid, 0.4);\n\n            if (this.debugEnabled && this.debugGraphics) {\n                // Draw original bounds in red\n                this.debugGraphics.lineStyle(2, 0xff0000);\n                this.debugGraphics.strokeRect(\n                    asteroidBounds.x,\n                    asteroidBounds.y,\n                    asteroidBounds.width,\n                    asteroidBounds.height\n                );\n\n                // Draw scaled bounds in yellow\n                this.debugGraphics.lineStyle(2, 0xffff00);\n                this.debugGraphics.strokeRect(\n                    scaledBounds.x,\n                    scaledBounds.y,\n                    scaledBounds.width,\n                    scaledBounds.height\n                );    \n            }\n\n            if (asteroid.x < -50 || asteroid.x > 850 || \n                asteroid.y < -50 || asteroid.y > 650) {\n                asteroid.destroy();\n                this.asteroids.splice(i, 1);\n            }\n\n            if (Phaser.Geom.Intersects.RectangleToRectangle(\n                this.player.getBounds(),\n                this.getScaledBounds(asteroid, 0.4)\n            )) {\n                this.handleGameOver();\n            }\n        }\n    }\n\n    private getScaledBounds(sprite: Phaser.GameObjects.Sprite, scale: number): Phaser.Geom.Rectangle {\n        const bounds = sprite.getBounds();\n        const widthDiff = bounds.width * (1 - scale);\n        const heightDiff = bounds.height * (1 - scale);\n        \n        return new Phaser.Geom.Rectangle(\n            bounds.x + (widthDiff / 2),\n            bounds.y + (heightDiff / 2),\n            bounds.width * scale,\n            bounds.height * scale\n        );\n    }\n\n    private levelUp() {\n        this.level++;\n        this.levelProgress = 0;\n        this.levelThreshold *= 1.2; // Increase threshold for next level\n        this.levelText.setText(`Level: ${this.level}`);\n\n        // Clear existing asteroids for a brief respite\n        this.asteroids.forEach(asteroidObj => asteroidObj.sprite.destroy());\n        this.asteroids = [];\n\n        // Stop current spawn timer\n        if (this.spawnTimer) {\n            this.spawnTimer.destroy();\n        }\n\n        // Start new level\n        this.startLevel();\n    }\n\n    private getRandomSpawnPosition(): { x: number; y: number; velocityX: number; velocityY: number } {\n        const side = Phaser.Math.Between(0, 3);\n        const baseSpeed = 3 + (this.level * 0.5); // Increase speed with level\n        const targetingProbability = Math.min(0.3 + (this.level * 0.1), 0.8); // Increases with level, caps at 80%\n        const isTargeting = Math.random() < targetingProbability;\n        let x, y, velocityX, velocityY;\n\n        switch(side) {\n            case 0: // top\n                x = Phaser.Math.Between(0, 800);\n                y = -50;\n                if (isTargeting) {\n                    velocityX = this.player.x - x;\n                    velocityY = this.player.y - y;\n                } else {\n                    velocityX = Phaser.Math.Between(-300, 300);\n                    velocityY = 300;\n                }\n                break;\n            case 1: // right\n                x = 850;\n                y = Phaser.Math.Between(0, 600);\n                if (isTargeting) {\n                    velocityX = this.player.x - x;\n                    velocityY = this.player.y - y;\n                } else {\n                    velocityX = -300;\n                    velocityY = Phaser.Math.Between(-300, 300);\n                }\n                break;\n            case 2: // bottom\n                x = Phaser.Math.Between(0, 800);\n                y = 650;\n                if (isTargeting) {\n                    velocityX = this.player.x - x;\n                    velocityY = this.player.y - y;\n                } else {\n                    velocityX = Phaser.Math.Between(-300, 300);\n                    velocityY = -300;\n                }\n                break;\n            default: // left\n                x = -50;\n                y = Phaser.Math.Between(0, 600);\n                if (isTargeting) {\n                    velocityX = this.player.x - x;\n                    velocityY = this.player.y - y;\n                } else {\n                    velocityX = 300;\n                    velocityY = Phaser.Math.Between(-300, 300);\n                }\n        }\n\n        const magnitude = Math.sqrt(velocityX * velocityX + velocityY * velocityY);\n        velocityX = (velocityX / magnitude) * baseSpeed;\n        velocityY = (velocityY / magnitude) * baseSpeed;\n\n        return { x, y, velocityX, velocityY };\n    }\n\n    private resetGameState() {\n        if (this.debugGraphics) {\n            this.debugGraphics.clear();\n        }        \n        this.asteroids.forEach(asteroidObj => asteroidObj.sprite.destroy());\n        this.asteroids = [];\n        this.score = 0;\n        this.gameOver = false;\n        this.level = 1;\n        this.levelProgress = 0;\n        this.levelThreshold = 1000;\n        \n        if (this.spawnTimer) {\n            this.spawnTimer.destroy();\n        }\n    }\n\n    private spawnAsteroid() {\n        if (this.gameOver) return;\n\n        const spawnData = this.getRandomSpawnPosition();\n        const asteroid = this.add.sprite(spawnData.x, spawnData.y, 'asteroid');\n        const baseScale = 0.5 + (Math.random() * 1.0); // Random size between 0.5 and 1.5\n        asteroid.setScale(baseScale);\n        asteroid.setDepth(1);\n\n        this.asteroids.push({\n            sprite: asteroid,\n            velocityX: spawnData.velocityX,\n            velocityY: spawnData.velocityY\n        });\n    }\n\n    private handleGameOver() {\n        this.gameOver = true;\n        this.spawnTimer.destroy();\n        \n        const gameOverText = this.add.text(400, 300, 'Game Over!', {\n            fontSize: '64px',\n            color: '#ffffff'\n        }).setOrigin(0.5);\n\n        const finalScore = this.add.text(400, 350, `Final Score: ${Math.floor(this.score)}`, {\n            fontSize: '32px',\n            color: '#ffffff'\n        }).setOrigin(0.5);\n\n        const levelReached = this.add.text(400, 390, `Level Reached: ${this.level}`, {\n            fontSize: '32px',\n            color: '#ffffff'\n        }).setOrigin(0.5);\n\n        const restartButton = this.add.text(400, 450, 'Play Again', {\n            fontSize: '32px',\n            backgroundColor: '#4a4a4a',\n            padding: { x: 10, y: 5 }\n        })\n        .setInteractive()\n        .setOrigin(0.5)\n        .on('pointerdown', () => {\n            this.scene.restart();\n        });\n    }\n}"
  }
}